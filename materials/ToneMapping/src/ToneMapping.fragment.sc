$input v_texcoord0

#include <bgfx_shader.sh>

uniform vec4 TonemapParams0;
uniform vec4 ExposureCompensation;
uniform vec4 LuminanceMinMax;
uniform vec4 TonemapCorrection;

SAMPLER2D(s_AverageLuminance, 0);
SAMPLER2D(s_LuminanceColorTexture, 1);
SAMPLER2D(s_ColorTexture, 2);
SAMPLER2D(s_RasterColor, 3);

void main() {
    vec4 _978 = texture2D(s_ColorTexture, v_texcoord0);
    vec3 _919 = _978.xyz;
    vec4 _986 = texture2D(s_LuminanceColorTexture, v_texcoord0);
    vec3 _1447;
    if (TonemapParams0.z <= 0.5) {
        _1447 = pow(max(_919, 0.0), vec3_splat(0.4545454680919647216796875));
    } else {
        vec4 _1003 = texture2D(s_AverageLuminance, vec2(0.5, 0.5));

        float _941 = clamp(_1003.x, LuminanceMinMax.x, LuminanceMinMax.y);
        
        float _1441;
        if (int(step(0.5, ExposureCompensation.x)) == 1) {
            _1441 = 1.0299999713897705078125 - (2.0 / ((0.4342944920063018798828125 * log(_941 + 1.0)) + 2.0));
        } else {
            _1441 = ExposureCompensation.y;
        }
        float _1052 = dot(_986.xyz, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875)) * exp(0.180000007152557373046875 / (_941 - _1441));
        vec3 _1443;

        int _948 = int(TonemapParams0.y);
        if (_948 == 1) {
            _1443 = _919 * (((_1052 * (1.0 + (_1052 / TonemapParams0.x))) / (1.0 + _1052)) / _1052);

        } else if (_948 == 2) {
            vec3 _1130 = _919 / (1.0 + _919);
            _1443 = mix(_919 / (1.0 + _1052), _1130, _1130);

        } else if (_948 == 3) {
            vec3 _1151 = _919 * 2.0;
            float _1206 = TonemapParams0.x;
            _1443 = (
                        (
                            (
                                (_1151 * ((_1151 * 0.1500000059604644775390625) + (0.0500000007450580596923828125))) 
                                + 
                                (0.0040000001899898052215576171875)
                            ) 
                            / 
                            ((_1151 * ((_1151 * 0.1500000059604644775390625) + (0.5))) + (0.060000002384185791015625))
                        ) 
                        - 
                        (0.066666662693023681640625)
                    ) 
                    * 
                    (
                        (1.0) 
                        / 
                        (
                            (
                                (
                                    (_1206 * ((_1206 * 0.1500000059604644775390625) + (0.0500000007450580596923828125))) 
                                    + 
                                    (0.0040000001899898052215576171875)
                                ) 
                                / 
                                (
                                    (_1206 * ((_1206 * 0.1500000059604644775390625) + (0.5))) 
                                    + 
                                    (0.060000002384185791015625)
                                )
                            ) 
                            - 
                            (0.066666662693023681640625)
                        )
                    );
        
        } else if (_948 == 4) {
            vec3 _1255 = mul(_919, mtxFromCols(vec3(0.59719002246856689453125, 0.354579985141754150390625, 0.048229999840259552001953125), vec3(0.075999997556209564208984375, 0.908339977264404296875, 0.0156599991023540496826171875), vec3(0.0284000001847743988037109375, 0.13382999598979949951171875, 0.837769985198974609375)));
            _1443 = clamp( 
                mul((((_1255 * (_1255 + (0.02457859925925731658935546875))) - (9.0537003416102379560470581054688e-05)) / ((_1255 * ((_1255 * 0.98372900485992431640625) + (0.4329510033130645751953125))) + (0.23808099329471588134765625))), mtxFromCols(vec3(1.60475003719329833984375, -0.5310800075531005859375, -0.0736699998378753662109375), vec3(-0.10208000242710113525390625, 1.108129978179931640625, -0.00604999996721744537353515625), vec3(-0.00326999998651444911956787109375, -0.07276000082492828369140625, 1.0760200023651123046875))), 
                (0.0), 
                (1.0));
        
        } else {
            vec3 _1287 = mul(_919, mtxFromCols(vec3(0.41245639324188232421875, 0.3575761020183563232421875, 0.180437505245208740234375), vec3(0.21267290413379669189453125, 0.715152204036712646484375, 0.072175003588199615478515625), vec3(0.01933390088379383087158203125, 0.119191996753215789794921875, 0.950304090976715087890625)));
            vec3 _1322 = vec3(_1287.x / (((_1287.x + _1287.y) + _1287.z) + 9.9999999747524270787835121154785e-07), _1287.y / (((_1287.x + _1287.y) + _1287.z) + 9.9999999747524270787835121154785e-07), (_1052 * (1.0 + (_1052 / TonemapParams0.x))) / (1.0 + _1052));
            _1443 = mul(vec3((_1322.x * _1322.z) / _1322.y, _1322.z, (((1.0 - _1322.x) - _1322.y) * _1322.z) / _1322.y), mtxFromCols(vec3(3.240454196929931640625, -1.537138462066650390625, -0.498531401157379150390625), vec3(-0.969265997409820556640625, 1.87601077556610107421875, 0.04155600070953369140625), vec3(0.0556433983147144317626953125, -0.2040258944034576416015625, 1.05722522735595703125)));
        }

        _1447 = mix(vec3_splat(dot(_1443, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875))), (((pow(max(_1443, (0.0)), vec3_splat(0.4545454680919647216796875)) - (0.5)) * TonemapCorrection.y) + (0.5)) + (TonemapCorrection.x), (max(0.0, TonemapCorrection.z)));
    }
    gl_FragColor = vec4(clamp(_1447, 0.0, 1.0), 1.0);
}
